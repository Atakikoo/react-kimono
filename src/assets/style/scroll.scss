@import './mixins.scss';

$base-px: 12px !default;
$line: $base-px * 2 !default;
$baseline: 24px !default;

$b: 600px !default;
$c: 768px !default;
$d: 960px !default;
$e: 1200px !default;

// Site width is 1200px, but it requires additional spacing so it works nicely
$contain: 1230px;
$site-width: $contain + ($line * 6);
$site-width-max: max-width $site-width - $breakpoint-subtract;

$small-outer-gutter: 0;
$medium-outer-gutter: 48px;
$large-outer-gutter: 64px;

// Scroll padding
// ---------------------------
// Padding starts off at a gutter size, eventually increasing to a point
// where it restricts the width to a grid, but to still allow the items
// to scroll off screen rather than cut off

.contain-scroll {
  padding-left: $small-outer-gutter;

  @include breakpoint($c) {
    padding-left: $line;
  }

  @include breakpoint($d) {
    padding-left: ($line * 2);
  }

  @include breakpoint($e) {
    padding-left: ($line * 3);
  }

  @include breakpoint($site-width) {
    padding-left: calc(50% - (#{$contain / 2}));
  }
}

// Scroll
// ---------------------------

.scroll {
  display: grid;
  grid-gap: 32px $small-outer-gutter;
  overflow: hidden;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;

  @include breakpoint($b) {
    grid-gap: 48px 32px;
  }

  @include breakpoint($c) {
    grid-gap: 48px 32px;
  }

  @include breakpoint($e) {
    grid-gap: 48px;
  }

  &::-webkit-scrollbar {
    display: none;
  }

  & .no-gap {
    grid-gap: 0;
  }
}

.scroll-medium {
  grid-template-columns: repeat(13, 250px);
}

.scroll-small {
  grid-template-columns: repeat(13, 168px);

  @include breakpoint($c) {
    grid-template-columns: repeat(13, 244px);
  }
}
