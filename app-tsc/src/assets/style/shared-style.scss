@import './variables.scss';
@import './mixins.scss';

// container sections

.section {
  width: 100%;
  padding: 10px 0 10px 0;
}

.sub-section {
  padding: 10px 0 10px 0;
}

// text
.sub-title {
  color: $red;
  font-size: 15;
}

.indication {
  color: grey;
  font-size: 0.7rem;
}

.text-violet {
  color: $violet;
}

.text-red {
  color: $red;
}

.text-right {
  text-align: right;
}

// block
.main-section {
  min-height: calc(100vh - #{$footer} - #{header()});
  width: 100%;
}

.container {
  padding: 10px;
  width: 100%;
}

.full-width {
  width: 100%;
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 100%;
}

@media only screen and (min-width: $screen-m) {
  .column {
    display: flex;
    flex-direction: column;
    flex-basis: 100%;
    flex: 1;
    padding: 10px;
  }
}

@media only screen and (max-width: $screen-m) {
  .column {
    all: none;
    padding: 10px;
  }
}

.flex-row-container {
  display: flex;
  flex-flow: row wrap;

  &.center {
    justify-content: center;
  }

  div {
    margin: 5px 0 0 0;
  }

  div:not(:last-child) {
    margin-right: 20px;
  }
}

// button

.button-float-right {
  z-index: 11;
  font-size: 300%;
  width: 50px;
  text-align: center;
  float: right;
  color: $yellow;

  @media screen and (min-width: $screen-s) and (max-width: $screen-m) {
    font-size: 200%;
    height: 30px;
    width: 30px;
  }
}

// input
.input-yellow {
  position: relative;
  background: $yellow;
  padding: 3px;
  display: inline-block;
  border-radius: 9999em;
  width: 95%;

  *:not(span) {
    position: relative;
    display: inherit;
    border-radius: inherit;
    margin: 0;
    border: none;
    outline: none;
    z-index: 1;
    line-height: 1.5;
    color: $grey;

    font-size: 1em;
    width: inherit;
    text-align: center;
  }
  &:focus + span {
    opacity: 1;
    transform: scale(2);
  }

  .label {
    color: white;
  }
}

// Flex

.flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-auto {
  flex: 1 1 auto;
  min-width: 0;
  min-height: 0;
}

// Scroll padding
// ---------------------------
// Padding starts off at a gutter size, eventually increasing to a point
// where it restricts the width to a grid, but to still allow the items
// to scroll off screen rather than cut off

.contain-scroll {
  padding-left: $small-outer-gutter;

  @include breakpoint($c) {
    padding-left: $line;
  }

  @include breakpoint($d) {
    padding-left: ($line * 2);
  }

  @include breakpoint($e) {
    padding-left: ($line * 3);
  }

  @include breakpoint($site-width) {
    padding-left: calc(50% - (#{$contain / 2}));
  }
}

// Scroll
// ---------------------------
.scroll {
  display: grid;
  grid-gap: 32px $small-outer-gutter;
  overflow: hidden;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;

  @include breakpoint($b) {
    grid-gap: 48px 32px;
  }

  @include breakpoint($c) {
    grid-gap: 48px 32px;
  }

  @include breakpoint($e) {
    grid-gap: 48px;
  }

  &::-webkit-scrollbar {
    display: none;
  }

  & .no-gap {
    grid-gap: 0;
  }
}

.scroll-medium {
  grid-template-columns: repeat(13, 250px);

  // 252 -> 378
  // @include breakpoint($c) {
  //   grid-template-columns: repeat(13, 378px); }
}

.scroll-small {
  grid-template-columns: repeat(13, 168px);

  // 168 -> 244
  @include breakpoint($c) {
    grid-template-columns: repeat(13, 244px);
  }
}
